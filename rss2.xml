<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>永远的万事屋</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>做海贼王的油腻男人</description>
    <pubDate>Mon, 01 Jan 2018 06:11:10 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>修复面子工程</title>
      <link>http://yoursite.com/2018/01/01/enchance-blog/</link>
      <guid>http://yoursite.com/2018/01/01/enchance-blog/</guid>
      <pubDate>Mon, 01 Jan 2018 05:48:32 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&amp;emsp;&amp;emsp;做出来的blog满怀欣喜的给别人看，然而居然被说“太难看”。excuse me？做为一个尤其看重内在的人，但更为看重外表的人，怎么能被其他人说难看呢？果断找修复面子的方案。&lt;br&gt;&amp;emsp;&amp;emsp;看到网上的推荐next主题得分最高，所以果断选
        
      
      </description>
      
      <content:encoded><![CDATA[<p>&emsp;&emsp;做出来的blog满怀欣喜的给别人看，然而居然被说“太难看”。excuse me？做为一个尤其看重内在的人，但更为看重外表的人，怎么能被其他人说难看呢？果断找修复面子的方案。<br>&emsp;&emsp;看到网上的推荐next主题得分最高，所以果断选择了next主题，按照文档修复了一波。并且也借此机会了解了一些常识，比如tags、categories的运用，比如分页的运用，还比如rss的小知识点。这个是不错的使用next的小知识点，对于初学者很实用：<a href="https://www.jianshu.com/p/5d5931289c09" target="_blank" rel="noopener">link</a>。<br>&emsp;&emsp;anyway，最后真的好看很多，很欣慰元旦这天没白忙。黑白永远不会过时。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/01/01/enchance-blog/#disqus_thread</comments>
    </item>
    
    <item>
      <title>白杨blog的开端文章</title>
      <link>http://yoursite.com/2017/12/27/hello-new-blog/</link>
      <guid>http://yoursite.com/2017/12/27/hello-new-blog/</guid>
      <pubDate>Tue, 26 Dec 2017 16:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;&amp;emsp;&amp;emsp;想做个人博客已经很久了，最近的这种想法尤其的强烈，所以动手做了这个自己的个人博客。下面说一下我做这个的历程。&lt;br&gt;&amp;emsp;&amp;emsp;最开始以前就听说过github支持免费的host服务，所以开始寻找github的支持，很容易找到了github pages的支持。按照官方给出的教程，五分钟时间搞定了首个github pages的“hello world”，然后后面看到了github pages的搭建blog的官方推荐“jekyll”。很高兴能有官方推荐的技术，这样能节省一大部分找对应技术方案的时间，而且能少走弯路，毕竟我还是信任github的（微笑脸）。&lt;br&gt;&amp;emsp;&amp;emsp;其实我对前端的认识还保留在jquery（最近了解了vue）的时代，我认为我好多的工作还是需要写页面的，例如部个局或者写个css样式啥的，所以我果断的安装了我认为非常流行的前端idea webstorm，然而并没有如我所愿，自从安装之后并没有使用过（微笑脸）。然后开始了我的jekyll之旅，对于一个使用windows的用户（而且使用的windows7）来说，对于任何官方文档只提供了linux和mac的技术来说是很痛苦的。找了大量的文章并且尝试了几次安装之后，总归是把jekyll以及需要的ruby环境安装好了。对照着jekyll的官方文档，也写出了一个post demo，直到现在也开始对这种技术有了一些了解，就是把markdown编写的内容动态渲染成html页面展示，只需要少许的配置，因为有默认的主题也不需要关心页面布局什么的，还真的是非常方便的。&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>&emsp;&emsp;想做个人博客已经很久了，最近的这种想法尤其的强烈，所以动手做了这个自己的个人博客。下面说一下我做这个的历程。<br>&emsp;&emsp;最开始以前就听说过github支持免费的host服务，所以开始寻找github的支持，很容易找到了github pages的支持。按照官方给出的教程，五分钟时间搞定了首个github pages的“hello world”，然后后面看到了github pages的搭建blog的官方推荐“jekyll”。很高兴能有官方推荐的技术，这样能节省一大部分找对应技术方案的时间，而且能少走弯路，毕竟我还是信任github的（微笑脸）。<br>&emsp;&emsp;其实我对前端的认识还保留在jquery（最近了解了vue）的时代，我认为我好多的工作还是需要写页面的，例如部个局或者写个css样式啥的，所以我果断的安装了我认为非常流行的前端idea webstorm，然而并没有如我所愿，自从安装之后并没有使用过（微笑脸）。然后开始了我的jekyll之旅，对于一个使用windows的用户（而且使用的windows7）来说，对于任何官方文档只提供了linux和mac的技术来说是很痛苦的。找了大量的文章并且尝试了几次安装之后，总归是把jekyll以及需要的ruby环境安装好了。对照着jekyll的官方文档，也写出了一个post demo，直到现在也开始对这种技术有了一些了解，就是把markdown编写的内容动态渲染成html页面展示，只需要少许的配置，因为有默认的主题也不需要关心页面布局什么的，还真的是非常方便的。<br><a id="more"></a><br>&emsp;&emsp;我也记不清了找什么关于jekyll的文章，搜索到了类似“jekyll和hexo”的文章，作为一个有学习欲望的小白，虽然和我要找的内容不相关，我还是点击了进去。然而这也开启了，真正的主角hexo的上场。文章里大概讲的就是以下几点：1.jekyll的编译相比hexo很慢 2.jekyll的环境很复杂 3.jekyll的主题很难看。所以作为一个有好奇心的青年，还是去验证一下网上说的事实（在这时候，其实jekyll还是给了我一些视野的，我没想到blog居然还能这样写）。安装了node.js，环境安装完毕，果然环境简单。做出一个demo来看，默认的主题果然比jekyll好看些（个人观点哈哈哈）。至于编译速度没有太大感觉，毕竟我也只做了demo。以下说一下我的个人观点，jekyll依赖于ruby环境，而ruby作为一个后端语言，前端并不是其擅长的，而node.js大家都清楚的哈虽然也是后端语言。<br>&emsp;&emsp;然后我就用hexo搭建了这个blog，虽然还有很多的地方不太会用。例如tag的使用。还有对这个的思考，如果以后blog文章很多的话，那会不会把所有的文章都列举在首页，那首页是不是就会很长？不管如何，我的个人blog今天算是迈出了第一步。哦对了，今天晚上去参加了我们7fresh第一个店铺的开业仪式，很多好吃的，然后现在出完回来补完了这个博客。那个谁谁谁也曾说，好的开端是成功的一半，那是不是我已经成功了一半啦啦啦。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2017/12/27/hello-new-blog/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
